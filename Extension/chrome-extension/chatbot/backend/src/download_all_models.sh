#!/bin/bash

# Script t·∫£i t·∫•t c·∫£ c√°c m√¥ h√¨nh embedding c·∫ßn thi·∫øt v·ªõi force_download
# S·ª≠ d·ª•ng: ./download_all_models.sh [host] [port]

HOST=${1:-localhost}
PORT=${2:-8000}
API_URL="http://$HOST:$PORT"

echo "B·∫Øt ƒë·∫ßu t·∫£i t·∫•t c·∫£ c√°c m√¥ h√¨nh embedding..."

# Ki·ªÉm tra k·∫øt n·ªëi API
echo "Ki·ªÉm tra k·∫øt n·ªëi API..."
if ! curl -s "$API_URL" > /dev/null; then
    echo "Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn API t·∫°i $API_URL. Vui l√≤ng ƒë·∫£m b·∫£o API ƒëang ch·∫°y."
    exit 1
fi

# H√†m t·∫£i m·ªôt m√¥ h√¨nh
download_model() {
    model_type=$1
    force=${2:-false}
    version=${3:-latest}
    
    echo "ƒêang t·∫£i m√¥ h√¨nh $model_type (force_download: $force, version: $version)..."
    
    response=$(curl -s -X POST "$API_URL/models/load" \
        -H "Content-Type: application/json" \
        -d "{\"model_type\": \"$model_type\", \"version\": \"$version\", \"force_download\": $force}")
    
    if echo "$response" | grep -q "\"status\": \"success\""; then
        echo "‚úÖ T·∫£i th√†nh c√¥ng m√¥ h√¨nh $model_type"
    else
        error=$(echo "$response" | grep -o "\"error\": \"[^\"]*\"" | cut -d'"' -f4)
        echo "‚ùå L·ªói khi t·∫£i m√¥ h√¨nh $model_type: $error"
        
        # N·∫øu l√† l·ªói kh√¥ng c√≥ model.bin ho·∫∑c kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c, th·ª≠ l·∫°i v·ªõi force=true
        if [ "$force" = "false" ] && (echo "$error" | grep -q "pytorch_model.bin\|connect to 'https://huggingface.co'\|torch.dtype"); then
            echo "üîÑ Th·ª≠ l·∫°i v·ªõi force_download=true..."
            download_model "$model_type" true "$version"
        fi
    fi
}

# T·∫£i m√¥ h√¨nh g·ªëc (kh√¥ng transformer)
echo "1Ô∏è‚É£ T·∫£i c√°c m√¥ h√¨nh c∆° b·∫£n..."
download_model "tfidf" false
download_model "bm25" false

# T·∫£i c√°c m√¥ h√¨nh transformer v·ªõi force_download
echo "2Ô∏è‚É£ T·∫£i c√°c m√¥ h√¨nh transformer..."
download_model "roberta" true
download_model "xlm-roberta" true
download_model "distilbert" true

# T·∫£i c√°c m√¥ h√¨nh hybrid
echo "3Ô∏è‚É£ T·∫£i c√°c m√¥ h√¨nh hybrid..."
download_model "hybrid_tfidf_bert" false
download_model "hybrid_bm25_bert" false
download_model "hybrid_bmx_bert" false

# Ki·ªÉm tra tr·∫°ng th√°i c√°c m√¥ h√¨nh
echo "4Ô∏è‚É£ Ki·ªÉm tra tr·∫°ng th√°i c√°c m√¥ h√¨nh..."
curl -s -X GET "$API_URL/models/active" | python -m json.tool

echo "Ho√†n th√†nh t·∫£i t·∫•t c·∫£ c√°c m√¥ h√¨nh!"
echo "B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ti·∫øn h√†nh fine-tune c√°c m√¥ h√¨nh v·ªõi l·ªánh:"
echo "curl -X POST \"$API_URL/models/fine-tune\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"path\": \"data/history_learning_data.json\", \"sample\": 100, \"version\": \"custom_v1\"}'"

# ƒê·∫∑t quy·ªÅn th·ª±c thi cho script
chmod +x "$0" 